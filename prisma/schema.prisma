generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(cuid())
  email     String        @unique
  role      String        @default("user")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  sessions  QuizSession[]

  @@map("users")
}

model QuizSession {
  id          String       @id @default(cuid())
  userId      String?
  startedAt   DateTime     @default(now())
  completedAt DateTime?
  status      String       @default("in_progress")
  durationMs  Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  answers     QuizAnswer[]
  user        User?        @relation(fields: [userId], references: [id])
  result      Result?

  @@map("quiz_sessions")
}

model QuizQuestion {
  id        String       @id @default(cuid())
  order     Int
  prompt    String
  type      String
  options   Json
  active    Boolean      @default(true)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  answers   QuizAnswer[]

  @@map("quiz_questions")
}

model QuizAnswer {
  id         String       @id @default(cuid())
  sessionId  String
  questionId String
  value      Json
  dwellMs    Int?
  createdAt  DateTime     @default(now())
  question   QuizQuestion @relation(fields: [questionId], references: [id])
  session    QuizSession  @relation(fields: [sessionId], references: [id])

  @@unique([sessionId, questionId])
  @@map("quiz_answers")
}

model Result {
  id        String      @id @default(cuid())
  sessionId String      @unique
  archetype String
  scores    Json
  createdAt DateTime    @default(now())
  session   QuizSession @relation(fields: [sessionId], references: [id])

  @@map("results")
}
